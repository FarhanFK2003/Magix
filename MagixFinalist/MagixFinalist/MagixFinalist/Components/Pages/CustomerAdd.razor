@page "/admin/customers/add"
@rendermode InteractiveServer
@inject MagixFinalist.Services.CustomersService customerService
@inject NavigationManager navigationManager
@inject IJSRuntime JSRuntime

<div class="container bg-white p-4 mt-5 rounded shadow-sm">
    <h3 class="text-center text-dark">Add Customer</h3>

    <EditForm Model="customer" OnValidSubmit="HandleValidSubmit">
        <div class="form-group mb-3">
            <label for="email" class="form-label">Email</label>
            <InputText id="email" type="email" class="form-control" @bind-Value="customer.Email" />
        </div>

        <div class="form-group mb-3">
            <label for="password" class="form-label">Password</label>
            <InputText id="password" type="password" class="form-control" @bind-Value="customer.Password" />
        </div>

        <div class="d-flex justify-content-center">
            <button class="btn btn-success me-2" type="submit">Add Customer</button>
            <button class="btn btn-secondary" @onclick="GoBack">Cancel</button>
        </div>
    </EditForm>
</div>

@code {
    private Customer customer = new Customer();

    private void HandleValidSubmit()
    {
        var existingCustomer = customerService.GetCustomerByEmail(customer.Email);
        if (existingCustomer != null)
        {
            // Handle the case where the customer already exists
            // e.g., show a message to the user
            JSRuntime.InvokeVoidAsync("alert", "Customer with this email already exists.");
            Console.WriteLine("Customer already exists with the same email.");
        }
        else
        {
            // Add new customer to the database
            customerService.AddCustomer(customer);
            navigationManager.NavigateTo("/admin");
        }
    }

    private void GoBack()
    {
        navigationManager.NavigateTo("/admin");
    }
}