@page "/admin/movies/add"
@rendermode InteractiveServer
@inject MagixFinalist.Services.MoviesService movieService
@inject NavigationManager navigationManager
@inject IJSRuntime JSRuntime

<div class="container bg-white p-4 mt-5 rounded shadow-sm">
    <h3 class="text-center text-dark">Add Movie</h3>

    <EditForm Model="movie" OnValidSubmit="HandleValidSubmit">
        <div class="form-group mb-3">
            <label for="name" class="form-label">Movie Name</label>
            <InputText id="name" class="form-control" @bind-Value="movie.Name" />
            @if (!string.IsNullOrEmpty(nameError))
            {
                <span class="text-danger">@nameError</span>
            }
        </div>

        <div class="form-group mb-3">
            <label for="price" class="form-label">Price</label>
            <InputNumber id="price" class="form-control" @bind-Value="movie.Price" />
            @if (!string.IsNullOrEmpty(priceError))
            {
                <span class="text-danger">@priceError</span>
            }
        </div>

        <div class="form-group mb-3">
            <label for="description" class="form-label">Description</label>
            <InputTextArea id="description" class="form-control" @bind-Value="movie.Description" />
        </div>

        <div class="form-group mb-3">
            <label for="imgPath" class="form-label">Image Path</label>
            <InputText id="imgPath" class="form-control" @bind-Value="movie.ImgPath" />
        </div>

        <div class="d-flex justify-content-center">
            <button class="btn btn-success me-2" type="submit">Add Movie</button>
            <button class="btn btn-secondary" @onclick="GoBack">Cancel</button>
        </div>
    </EditForm>
</div>

@code {
    private Movie movie = new Movie();
    private string nameError;
    private string priceError;

    private void HandleValidSubmit()
    {
        // Validate Movie Name
        if (string.IsNullOrWhiteSpace(movie.Name))
        {
            nameError = "Movie name cannot be empty.";
            JSRuntime.InvokeVoidAsync("alert", "Movie name is required.");
            return;
        }
        else
        {
            nameError = null;
        }

        // Validate Price
        if (movie.Price < 0)
        {
            priceError = "Price cannot be negative.";
            JSRuntime.InvokeVoidAsync("alert", "Movie price must be a positive value.");
            return;
        }
        else
        {
            priceError = null;
        }
        movieService.AddMovie(movie);
        navigationManager.NavigateTo("/admin");
    }

    private void GoBack()
    {
        navigationManager.NavigateTo("/admin");
    }
}
